//This file is automatically generated by Easy Motion
//DO NOT MODIFY THIS FILE; your changes will be overwritten

HomingTable:
	@default_home1;
	@default_home2;
	@default_home3;
	@default_home4;
	@default_home5;
	@default_home6;
	@default_home7;
	@default_home8;
	@default_home9;
	@default_home10;
	@default_home11;
	@default_home12;
	@default_home13;
	@default_home14;
	@0;
	@0;
	@default_home17;
	@default_home18;
	@default_home19;
	@default_home20;
	@default_home21;
	@default_home22;
	@default_home23;
	@default_home24;
	@default_home25;
	@default_home26;
	@default_home27;
	@default_home28;
	@default_home29;
	@default_home30;
	@0;
	@0;
	@default_home33;
	@default_home34;
	@default_home35;
	@0;
	@default_home37;
	@default_home38;
	@default_home39;
	@home40;

home40:
/*Home 40(-4)  - Move positive until mechanical limit is reached. Stop when home threshold current is reached for an imposed time and move away from the limit with the absolute value or Home position variable. */
/* In case of Stepper Open Loop control + encoder configuration, the homing is based on the position control error set in Setup and the Current threshold time value. */
  PROD(L) = ASR; //Set low part of PROD with ASR

  PROD(H) = LSACTIVE; //Set high part of PROD with LSACTIVE

  var_lf(H) = 0; //Set high part of var_lf with 0

  PRODH(H) = TERRMAX; //Set high part of PRODH with TERRMAX

  LSACTIVE = 1;

  SRB asr, 0xEFFF, 0x0; //Set asr using AND mask 0xEFFF and OR mask 0x0000

  var_lf(L) = HOMETIME; //Set low part of var_lf with HOMETIME

  TERRMAX = 0xFFFF;

  GOTO H40_TSH37_HomeCrt_GT0_f, homecrt, GEQ; //Branch to H40_TSH37_HomeCrt_GT0_f if homecrt >= 0

  HOMECRT = -HOMECRT;

H40_TSH37_HomeCrt_GT0_f: //Define label H40_TSH37_HomeCrt_GT0_f

  var_i3 = homing_nr;

  SRB var_i3, 0x1, 0x0; //Set var_i3 using AND mask 0x0001 and OR mask 0x0000

  GOTO H40_TSH37_NoNeg1_Transm, Transmission, GEQ; //Branch to H40_TSH37_NoNeg1_Transm if Transmission >= 0

  GOTO H40_TSH37_Homing_ODD_Init, var_i3, EQ; //Branch to H40_TSH37_Homing_ODD_Init if var_i3 == 0

  GOTO H40_TSH37_Homing_Mode_37_Init; //Branch to H40_TSH37_Homing_Mode_37_Init

H40_TSH37_NoNeg1_Transm: //Define label H40_TSH37_NoNeg1_Transm

  GOTO H40_TSH37_Homing_Mode_37_Init, var_i3, EQ; //Branch to H40_TSH37_Homing_Mode_37_Init if var_i3 == 0

H40_TSH37_Homing_ODD_Init: //Define label H40_TSH37_Homing_ODD_Init

  CPOS = -1000000000;

  //Position profile
  CPR; //position command is relative
  MODE PP;
  TUM1; //set Target Update Mode 1
  UPD; // execute immediate

  var_i2 = SCR;

  SRB var_i2, 0x4000, 0x0; //Set var_i2 using AND mask 0x4000 and OR mask 0x0000

  GOTO H40_TSH37_waitCurrent_NegMot, var_i2, EQ; //Branch to H40_TSH37_waitCurrent_NegMot if var_i2 == 0

  var_i2 = OSR;

  SRB var_i2, 0x400, 0x0; //Set var_i2 using AND mask 0x0400 and OR mask 0x0000

  GOTO H40_TSH37_waitCurrent_NegMot, var_i2, NEQ; //Branch to H40_TSH37_waitCurrent_NegMot if var_i2 != 0

  var_i2 = OSR;

  SRB var_i2, 0x1000, 0x0; //Set var_i2 using AND mask 0x1000 and OR mask 0x0000

  GOTO H40_TSH37_waitPosERR_Negative, var_i2, NEQ; //Branch to H40_TSH37_waitPosERR_Negative if var_i2 != 0

  GOTO H40_TSH37_waitPosERR_Positive; //Branch to H40_TSH37_waitPosERR_Positive

H40_TSH37_Homing_Mode_37_Init: //Define label H40_TSH37_Homing_Mode_37_Init

  CPOS = 1000000000;

  //Position profile
  CPR; //position command is relative
  MODE PP;
  TUM1; //set Target Update Mode 1
  UPD; // execute immediate

  var_i2 = SCR;

  SRB var_i2, 0x4000, 0x0; //Set var_i2 using AND mask 0x4000 and OR mask 0x0000

  GOTO H40_TSH37_waitCurrent_PosMot, var_i2, EQ; //Branch to H40_TSH37_waitCurrent_PosMot if var_i2 == 0

  var_i2 = OSR;

  SRB var_i2, 0x400, 0x0; //Set var_i2 using AND mask 0x0400 and OR mask 0x0000

  GOTO H40_TSH37_waitCurrent_PosMot, var_i2, NEQ; //Branch to H40_TSH37_waitCurrent_PosMot if var_i2 != 0

  GOTO H40_TSH37_waitPosERR_Positive; //Branch to H40_TSH37_waitPosERR_Positive

H40_TSH37_waitCurrent_NegMot: //Define label H40_TSH37_waitCurrent_NegMot

  var_i3 = HOMECRT;

  var_i3 += IQREF;

  GOTO H40_TSH37_waitCurrent_NegMot, var_i3, GT; //Branch to H40_TSH37_waitCurrent_NegMot if var_i3 > 0

  // Define event : After a wait time equal with value of variable var_lf
  !RT var_lf;
  WAIT!; // Wait until the event occurs

  var_i3 = HOMECRT;

  var_i3 += IQREF;

  GOTO H40_TSH37_waitCurrent_NegMot, var_i3, GT; //Branch to H40_TSH37_waitCurrent_NegMot if var_i3 > 0

  GOTO H40_TSH37_StopMotion; //Branch to H40_TSH37_StopMotion

H40_TSH37_waitCurrent_PosMot: //Define label H40_TSH37_waitCurrent_PosMot

  var_i3 = HOMECRT;

  var_i3 -= IQREF;

  GOTO H40_TSH37_waitCurrent_PosMot, var_i3, GT; //Branch to H40_TSH37_waitCurrent_PosMot if var_i3 > 0

  // Define event : After a wait time equal with value of variable var_lf
  !RT var_lf;
  WAIT!; // Wait until the event occurs

  var_i3 = HOMECRT;

  var_i3 -= IQREF;

  GOTO H40_TSH37_waitCurrent_PosMot, var_i3, GT; //Branch to H40_TSH37_waitCurrent_PosMot if var_i3 > 0

  GOTO H40_TSH37_StopMotion; //Branch to H40_TSH37_StopMotion

H40_TSH37_waitPosERR_Negative: //Define label H40_TSH37_waitPosERR_Negative

  var_i3 = ERRMAX;

  var_i3 += POSERR;

  GOTO H40_TSH37_waitPosERR_Negative, var_i3, GT; //Branch to H40_TSH37_waitPosERR_Negative if var_i3 > 0

  // Define event : After a wait time equal with value of variable var_lf
  !RT var_lf;
  WAIT!; // Wait until the event occurs

  var_i3 = ERRMAX;

  var_i3 += POSERR;

  GOTO H40_TSH37_waitPosERR_Negative, var_i3, GT; //Branch to H40_TSH37_waitPosERR_Negative if var_i3 > 0

  GOTO H40_TSH37_StopMotion; //Branch to H40_TSH37_StopMotion

H40_TSH37_waitPosERR_Positive: //Define label H40_TSH37_waitPosERR_Positive

  var_i3 = ERRMAX;

  var_i3 -= POSERR;

  GOTO H40_TSH37_waitPosERR_Positive, var_i3, GT; //Branch to H40_TSH37_waitPosERR_Positive if var_i3 > 0

  // Define event : After a wait time equal with value of variable var_lf
  !RT var_lf;
  WAIT!; // Wait until the event occurs

  var_i3 = ERRMAX;

  var_i3 -= POSERR;

  GOTO H40_TSH37_waitPosERR_Positive, var_i3, GT; //Branch to H40_TSH37_waitPosERR_Positive if var_i3 > 0

H40_TSH37_StopMotion: //Define label H40_TSH37_StopMotion

  quickstops = 1;

  !MC; WAIT!; // wait for completion
  var_i3 = homing_nr;

  var_i3 -= 39;

  GOTO H40_TSH37_homing_39_or_40, var_i3, GEQ; //Branch to H40_TSH37_homing_39_or_40 if var_i3 >= 0

  SRB ASR, 0xFFFF, 0x48; //Set ASR using AND mask 0xFFFF and OR mask 0x0048

  CPOS = -CPOS;

  CSPD = HOMESPD;

  //Position profile
  CPR; //position command is relative
  MODE PP;
  UPD; // execute immediate

H40_TSH37_Waitindex: //Define label H40_TSH37_Waitindex

  var_i3 = SCR;

  SRB var_i3, 0x400, 0x0; //Set var_i3 using AND mask 0x0400 and OR mask 0x0000

  GOTO H40_THS37_Waitindex_onFDBK2, var_i3, GT; //Branch to H40_THS37_Waitindex_onFDBK2 if var_i3 > 0

  // Define event : When the encoder index goes low->high
  DISCAPI; // Disable encoder index transition detection
  !CAP;
  ENCAPI1;
  WAIT!; // Wait until the event occurs

  CPOS = CAPPOS;

  GOTO H40_THS37_Waitindex_onFDBK1; //Branch to H40_THS37_Waitindex_onFDBK1

H40_THS37_Waitindex_onFDBK2: //Define label H40_THS37_Waitindex_onFDBK2

  // Define event : When the 2nd encoder index / home input goes low->high
  DIS2CAPI; // Disable 2nd encoder index / home input transition detection
  !CAP;
  EN2CAPI1;
  WAIT!; // Wait until the event occurs

  CPOS = CAPPOS2;

H40_THS37_Waitindex_onFDBK1: //Define label H40_THS37_Waitindex_onFDBK1

  CSPD = HOMESPD;

  //Position profile
  CPA; //position command is absolute
  MODE PP;
  TUM1; //set Target Update Mode 1
  UPD; // execute immediate
  !MC; WAIT!; // wait for completion

  GOTO H40_TSH37_exit_homing; //Branch to H40_TSH37_exit_homing

H40_TSH37_homing_39_or_40: //Define label H40_TSH37_homing_39_or_40

  var_i3 = homing_nr;

  SRB var_i3, 0x1, 0x0; //Set var_i3 using AND mask 0x0001 and OR mask 0x0000

  GOTO H40_TSH37_NoNeg2_Transm, Transmission, GEQ; //Branch to H40_TSH37_NoNeg2_Transm if Transmission >= 0

  GOTO H40_TSH37_Homing_ODD2, var_i3, EQ; //Branch to H40_TSH37_Homing_ODD2 if var_i3 == 0

  GOTO H40_TSH37_Homing_nr_even_f; //Branch to H40_TSH37_Homing_nr_even_f

H40_TSH37_NoNeg2_Transm: //Define label H40_TSH37_NoNeg2_Transm

  GOTO H40_TSH37_Homing_nr_even_f, var_i3, EQ; //Branch to H40_TSH37_Homing_nr_even_f if var_i3 == 0

H40_TSH37_Homing_ODD2: //Define label H40_TSH37_Homing_ODD2

  CPOS = HOMEPOS;

  GOTO H40_TSH37_MoveAway_f, CPOS, GEQ; //Branch to H40_TSH37_MoveAway_f if CPOS >= 0

  CPOS = -HOMEPOS;

  GOTO H40_TSH37_MoveAway_f; //Branch to H40_TSH37_MoveAway_f

H40_TSH37_Homing_nr_even_f: //Define label H40_TSH37_Homing_nr_even_f

  CPOS = HOMEPOS;

  GOTO H40_TSH37_MoveAway_f, CPOS, LT; //Branch to H40_TSH37_MoveAway_f if CPOS < 0

  CPOS = -HOMEPOS;

H40_TSH37_MoveAway_f: //Define label H40_TSH37_MoveAway_f

  SRB ASR, 0xFFFF, 0x48; //Set ASR using AND mask 0xFFFF and OR mask 0x0048

  CSPD = HOMESPD;

  SAP 0L; // Set actual position value to 0[IU]

  //Position profile
  CPR; //position command is relative
  MODE PP;
  UPD; // execute immediate
  !MC; WAIT!; // wait for completion

H40_TSH37_exit_homing: //Define label H40_TSH37_exit_homing

  SAP HOMEPOS; // Set actual position to value of HOMEPOS

  asr = PROD(L); //Set asr with low part of 32-bit variable PROD

  LSACTIVE = PROD(H); //Set LSACTIVE with high part of 32-bit variable PROD

  TERRMAX = PRODH(H); //Set TERRMAX with high part of 32-bit variable PRODH

	RET;

